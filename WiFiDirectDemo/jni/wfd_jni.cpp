/* DO NOT EDIT THIS FILE - it is machine generated */
#include "wfd_jni.h"
/* Header for class com_example_android_wifidirect_DeviceDetailFragment */
#include <android/native_window_jni.h>

#include <android/log.h>
#include <stdlib.h>

#include <jni.h>
#include "wfd.h"
#include "dp.h"

typedef struct
{
	jobject   obj;
	jmethodID mid;
} Java_Callback_t;

typedef struct
{
	Java_Callback_t onReceiveMessage;
} Java_Callback_List_t;
Java_Callback_List_t g_javaCallbackList;

JavaVM* g_JavaVM = NULL;

static void EventCallback(int msg, int ext1, int ext2, void * userData)
{
	JNIEnv* env;
	bool needDetach = false;
	g_JavaVM->GetEnv((void**)&env, JNI_VERSION_1_6);
	if (env == NULL)
	{
		needDetach = true;
		int status = g_JavaVM->AttachCurrentThread(&env, NULL);
		if(status < 0)
		{
			DP("Attach Current thread failed!!");
		}
	}

	env->MonitorEnter(g_javaCallbackList.onReceiveMessage.obj);
	env->CallVoidMethod(g_javaCallbackList.onReceiveMessage.obj, g_javaCallbackList.onReceiveMessage.mid, msg, ext1, ext2);
	env->MonitorExit(g_javaCallbackList.onReceiveMessage.obj);

	if (needDetach)
	{
		g_JavaVM->DetachCurrentThread();
	}
}

static void SetupCallbackFunction(JNIEnv* env, jobject obj, Java_Callback_t* pFunc, const char* pCBFuncName, const char* pSig)
{
	if(NULL == env || NULL == pFunc || NULL == pCBFuncName || NULL == pSig)
	{
		return;
	}

	pFunc->obj = env->NewGlobalRef(obj);
	jclass cls = env->GetObjectClass(obj);
	pFunc->mid = env->GetMethodID(cls, pCBFuncName, pSig);
}

static void FindCallbackFunctions(JNIEnv * env, jobject obj)
{
	SetupCallbackFunction(env, obj, &g_javaCallbackList.onReceiveMessage, "onReceiveMessage", "(III)V");
}

jint JNI_OnLoad(JavaVM *vm, void *reserved)
{
	jint nResult = JNI_VERSION_1_6;

	g_JavaVM = vm;
	return nResult;
}

jint JNICALL Java_com_example_android_wifidirect_WifiDisplayPreviewActivity_start
  (JNIEnv *env, jobject thiz, jstring jIP, jobject surface)
{
	const char * cIP = env->GetStringUTFChars(jIP, NULL);
	if (cIP == NULL)
	{
		DP("null IP.");
		return -1;
	}

	FindCallbackFunctions(env, thiz);

	jclass clazz = env->FindClass("android/view/Surface");
	jfieldID nativeSurface = env->GetFieldID(clazz, "mNativeSurface", "I");
	void * nativeWindow = reinterpret_cast<void *>(env->GetIntField(surface, nativeSurface));

	DP("WFD source IP :%s \n", cIP);
	int ret = wfd_start(cIP, nativeWindow, EventCallback, NULL);
	env->ReleaseStringUTFChars(jIP, cIP);
	return ret;
}

jint JNICALL Java_com_example_android_wifidirect_WifiDisplayPreviewActivity_stop
  (JNIEnv *env, jobject thiz)
{
	wfd_stop();
	return 0;
}

/*****************************************************************************/
jint JNICALL Java_com_example_android_wifidirect_WifiDisplayPreviewActivity_setSurface
  (JNIEnv *env, jobject thiz, jobject surface)
{
	jclass clazz = env->FindClass("android/view/Surface");
	jfieldID nativeSurface = env->GetFieldID(clazz, "mNativeSurface", "I");
	void * nativeWindow = reinterpret_cast<void *>(env->GetIntField(surface, nativeSurface));
	return 0;
}

